name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.25'

      - name: Cache Go modules
        uses: actions/cache@v4
        with:
          path: |
            ~/.cache/go-build
            ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-

      - name: Install tools
        run: |
          go version

      - name: Start services (Redis & Redis Cluster)
        run: |
          docker-compose up -d redis redis-cluster
          # Wait for Redis
          for i in {1..30}; do (echo > /dev/tcp/127.0.0.1/6379) >/dev/null 2>&1 && break || sleep 1; done
          # Wait for Redis Cluster ports
          for port in 7000 7001 7002; do for i in {1..60}; do (echo > /dev/tcp/127.0.0.1/$port) >/dev/null 2>&1 && break || sleep 1; done; done

      - name: Run tests (-race)
        run: |
          go test ./... -race -count=1

      - name: Run tests with coverage
        run: |
          go test ./... -coverprofile=coverage.out -count=1
          go tool cover -func=coverage.out | tail -n 1

      - name: Stop services
        if: always()
        run: |
          docker-compose down

  smoke-test:
    runs-on: ubuntu-latest
    needs: test
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.25'

      - name: Build sonic-boom
        run: |
          go build -o sonic-boom ./cmd

      - name: Start services with Docker Compose
        run: |
          docker-compose up -d
          sleep 10 # Wait for services to be ready

      - name: Run smoke tests
        run: |
          chmod +x scripts/smoke_in_memory.sh
          ./scripts/smoke_in_memory.sh

      - name: Cleanup
        if: always()
        run: |
          docker-compose down
