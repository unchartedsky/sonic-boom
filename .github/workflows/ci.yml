name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    services:
      redis:
        image: redis:7
        ports:
          - 6379:6379
        options: >-
          --health-cmd "redis-cli ping || exit 1"
          --health-interval 5s
          --health-timeout 3s
          --health-retries 20
      redis-cluster:
        image: grokzen/redis-cluster:6.2.8
        env:
          IP: 0.0.0.0
          INITIAL_PORT: 7000
          MASTERS: 3
          SLAVES_PER_MASTER: 0
        ports:
          - 7000:7000
          - 7001:7001
          - 7002:7002
        options: >-
          --health-cmd "bash -lc 'redis-cli -p 7000 cluster info | grep -q cluster_state:ok'"
          --health-interval 5s
          --health-timeout 3s
          --health-retries 60
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.25'

      - name: Cache Go modules
        uses: actions/cache@v4
        with:
          path: |
            ~/.cache/go-build
            ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-

      - name: Install tools
        run: |
          go version

      - name: Wait for services
        run: |
          for i in {1..60}; do (echo > /dev/tcp/127.0.0.1/6379) >/dev/null 2>&1 && echo "redis ok" && break || sleep 1; done
          for port in 7000 7001 7002; do for i in {1..120}; do (echo > /dev/tcp/127.0.0.1/$port) >/dev/null 2>&1 && echo "cluster port $port ok" && break || sleep 1; done; done

      - name: Run tests (-race)
        run: |
          go test ./... -race -count=1

      - name: Run tests with coverage
        run: |
          go test ./... -coverprofile=coverage.out -count=1
          go tool cover -func=coverage.out | tail -n 1

  smoke-test:
    runs-on: ubuntu-latest
    needs: test
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.25'

      - name: Build sonic-boom
        run: |
          go build -o sonic-boom ./cmd

      - name: Start services with Docker Compose
        run: |
          docker-compose up -d
          sleep 10 # Wait for services to be ready

      - name: Run smoke tests
        run: |
          chmod +x scripts/smoke_in_memory.sh
          ./scripts/smoke_in_memory.sh

      - name: Cleanup
        if: always()
        run: |
          docker-compose down
