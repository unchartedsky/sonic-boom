name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    services:
      redis:
        image: redis
        ports:
          - 6379:6379
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    steps:
      - name: Checkout
        uses: actions/checkout@v5

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.25'

      - name: Cache Go modules
        uses: actions/cache@v4
        with:
          path: |
            ~/.cache/go-build
            ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-

      - name: Install tools
        run: |
          go version

      - name: Start Redis Cluster with Docker Compose
        run: |
          docker-compose up -d redis-cluster
          
          # Wait for ports to be accessible from host
          echo "Waiting for Redis Cluster ports to be accessible..."
          for port in 7000 7001 7002; do
            for i in {1..60}; do
              if (echo > /dev/tcp/127.0.0.1/$port) >/dev/null 2>&1; then
                echo "✓ Port $port accessible"
                break
              fi
              sleep 1
            done
          done
          
          # Install redis-cli to check cluster state from host
          sudo apt-get update -qq
          sudo apt-get install -y redis-tools
          
          # Wait for cluster to be ready
          echo "Waiting for Redis Cluster to be ready..."
          for i in {1..120}; do
            if redis-cli -h 127.0.0.1 -p 7000 cluster info 2>/dev/null | grep -q "cluster_state:ok"; then
              echo "✓ Redis Cluster ready"
              break
            fi
            echo "  Attempt $i/120: Cluster not ready yet..."
            sleep 2
          done
          
          # Final verification from host
          for port in 7000 7001 7002; do
            if ! redis-cli -h 127.0.0.1 -p $port ping >/dev/null 2>&1; then
              echo "✗ Redis Cluster port $port not responding to redis-cli"
              docker-compose logs redis-cluster
              exit 1
            fi
            echo "✓ Redis Cluster port $port responding"
          done
          
          echo "All Redis Cluster nodes ready!"

      - name: Run tests (-race)
        run: |
          go test ./... -race -count=1

      - name: Run tests with coverage
        run: |
          go test ./... -coverprofile=coverage.out -count=1
          go tool cover -func=coverage.out | tail -n 1

      - name: Stop Redis Cluster
        if: always()
        run: |
          docker-compose down

  smoke-test:
    runs-on: ubuntu-latest
    needs: test
    steps:
      - name: Checkout
        uses: actions/checkout@v5

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.25'

      - name: Build sonic-boom
        run: |
          go build -o sonic-boom ./cmd

      - name: Start services with Docker Compose
        run: |
          docker-compose up -d
          sleep 10 # Wait for services to be ready

      - name: Run smoke tests
        run: |
          chmod +x scripts/smoke_in_memory.sh
          ./scripts/smoke_in_memory.sh

      - name: Cleanup
        if: always()
        run: |
          docker-compose down
